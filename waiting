;;; -*- Mode: Scheme; character-encoding: utf-8; -*-

;;; Copyright (C) 2012 Ken Haase.  All rights reserved.

(use-module 'updatefile)

(updatefile (get-component "common.scm"))

(define (waitingpage (space #f) (name #f))
  (stylesheet! "/waitingworship.css")
  (javascript! "/waitingworship.js")
  (when #t ;; (exists? (get space 'background))
    (htmlheader
     (xmlblock STYLE ()
       (xhtml "body {background-image: url('"
	 (try (get space 'background) "bhfm.jpg") "');}\n"))))
  (title! (get space 'name))
  (let ((message (getmessage space))
	(ministers (getministers space)))
    (htmlheader
     (xmlblock SCRIPT  ()
       (xhtml "var ww_space='" (uuid->string (get space 'uuid)) "';\n")
       (xhtml "var ww_name='" (string-subst name "'" "\\'") "';\n")
       (xhtml "var ww_sync=" (time) ";\n")
       (xhtml "var ww_ministers=" (jsonout (lexsorted ministers)) ";\n")))
    (body! 'id "WAITINGPAGE"  'onload "setupWaiting();"
	   'class (if (exists? message) "hearing" "listening"))
    (div ((id "MINISTRY"))
      (h1 
	(img src "/speak.png" alt "speak" onclick "speak();"
	     title "tap to share a message")
	(anchor (scripturl "/leave"
		    'space (uuid->string (get space 'uuid))
		    'name name)
	  (img src "/door.png" alt "leave"
	       title "tap to leave worship"))
	(span ((class "title")) "Message"))
      (div ((id "MESSAGE")
	    (onclick "hear();")
	    (title "Tap to re-veal the last message."))
	(div ((id "WORDS")) (try (get message 'content) ""))
	(div ((id "MINISTER") (class "minister"))
	  (try (get message 'minister) "")))
      (form ((action "/waiting") (method "POST"))
	(input TYPE "HIDDEN" NAME "NAME" VALUE name)
	(input TYPE "HIDDEN" NAME "SPACEID"
	       VALUE (uuid->string (get space 'uuid)))
	(input TYPE "SUBMIT" NAME "ACTION" VALUE "Cancel")
	(xmlblock textarea ((NAME "MESSAGE") (id "MESSAGETEXT")))
	(input TYPE "SUBMIT" NAME "ACTION" VALUE "Share")))
    (div ((id "MINISTERS"))
      (h1 "Those Gathered")
      (div ((id "MINISTERLIST"))
	(do-choices (minister ministers)
	  (div ((class "minister")) minister))))))

(define (main (spaceid #f) (name #f) (action #f) (message #f))
  (updatefile common.scm)
  (let ((space (getspace spaceid)))
    (req/set! 'space space)
    (when (and message (equal? action "Share"))
      (addmessage space message name))
    (enter (getspace spaceid) name)
    (set-cookie! 'ww:name name)
    (req/call waitingpage)))





